{
 "Resources": {
  "InstanceSG2AE1100C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for EC2 instances",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "HighAvailabilityVPC:ExportsOutputRefHighAvailabilityVPC20615178DBE49E9F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/InstanceSG/Resource"
   }
  },
  "InstanceSGfromHighAvailabilityAppALBSG8881BA0780A5512CAA": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow HTTP traffic from ALB",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "InstanceSG2AE1100C",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBSGB173E466",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/InstanceSG/from HighAvailabilityAppALBSG8881BA07:80"
   }
  },
  "ALBSGB173E466": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for ALB",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP traffic from anywhere",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "HighAvailabilityVPC:ExportsOutputRefHighAvailabilityVPC20615178DBE49E9F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/ALBSG/Resource"
   }
  },
  "LaunchTemplate04EC5460": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "ImageId": {
      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
     },
     "InstanceType": "t3.micro",
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "InstanceSG2AE1100C",
        "GroupId"
       ]
      }
     ],
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "HighAvailabilityApp/LaunchTemplate"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "HighAvailabilityApp/LaunchTemplate"
        }
       ]
      }
     ],
     "UserData": {
      "Fn::Base64": "#!/bin/bash\nexec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\necho \"Starting user data script execution\"\nyum update -y\necho \"Yum update completed\"\nyum install -y httpd\necho \"Apache installed\"\nsystemctl start httpd\necho \"Apache started\"\nsystemctl status httpd\necho \"Apache status checked\"\nsystemctl enable httpd\necho \"Apache enabled to start on boot\"\necho \"<h1>Hello from High-Availability Web App!</h1><p>Instance ID: $(curl -s http://169.254.169.254/latest/meta-data/instance-id)</p>\" > /var/www/html/index.html\necho \"Index.html created\"\ncat /var/www/html/index.html\necho \"Index.html content verified\"\necho \"User data script completed\"\n"
     }
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "HighAvailabilityApp/LaunchTemplate"
       }
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/LaunchTemplate/Resource"
   }
  },
  "ASG46ED3070": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "DesiredCapacity": "2",
    "MaxSize": "4",
    "MinSize": "1",
    "MixedInstancesPolicy": {
     "InstancesDistribution": {
      "OnDemandPercentageAboveBaseCapacity": 0
     },
     "LaunchTemplate": {
      "LaunchTemplateSpecification": {
       "LaunchTemplateId": {
        "Ref": "LaunchTemplate04EC5460"
       },
       "Version": {
        "Fn::GetAtt": [
         "LaunchTemplate04EC5460",
         "LatestVersionNumber"
        ]
       }
      },
      "Overrides": [
       {
        "InstanceType": "t3.micro"
       }
      ]
     }
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-scaling-group:desired-capacity",
      "PropagateAtLaunch": true,
      "Value": "true"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "ALBListenerTargetsGroup01D7716A"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Fn::ImportValue": "HighAvailabilityVPC:ExportsOutputRefHighAvailabilityVPCPrivateSubnet1Subnet9E98EB1419F94019"
     },
     {
      "Fn::ImportValue": "HighAvailabilityVPC:ExportsOutputRefHighAvailabilityVPCPrivateSubnet2Subnet7B1D60F833E4CA61"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/ASG/ASG"
   }
  },
  "ALBAEE750D2": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBSGB173E466",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "HighAvailabilityVPC:ExportsOutputRefHighAvailabilityVPCPublicSubnet1Subnet97AEB9B44E48B74D"
     },
     {
      "Fn::ImportValue": "HighAvailabilityVPC:ExportsOutputRefHighAvailabilityVPCPublicSubnet2Subnet90D00118209A79C0"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/ALB/Resource"
   }
  },
  "ALBListener3B99FF85": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ALBListenerTargetsGroup01D7716A"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBAEE750D2"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/ALB/Listener/Resource"
   }
  },
  "ALBListenerTargetsGroup01D7716A": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Fn::ImportValue": "HighAvailabilityVPC:ExportsOutputRefHighAvailabilityVPC20615178DBE49E9F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/ALB/Listener/TargetsGroup/Resource"
   }
  },
  "HighCPUAlarm56BE6E7D": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmDescription": "Alarm if CPU exceeds 80%",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "DatapointsToAlarm": 2,
    "Dimensions": [
     {
      "Name": "AutoScalingGroupName",
      "Value": {
       "Ref": "ASG46ED3070"
      }
     }
    ],
    "EvaluationPeriods": 2,
    "MetricName": "CPUUtilization",
    "Namespace": "AWS/EC2",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 80
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/HighCPUAlarm/Resource"
   }
  },
  "BackupVault3A9C5852": {
   "Type": "AWS::Backup::BackupVault",
   "Properties": {
    "BackupVaultName": "HighAvailabilityAppVault-HighAvailabilityApp"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/BackupVault/Resource"
   }
  },
  "BackupPlanA8F64793": {
   "Type": "AWS::Backup::BackupPlan",
   "Properties": {
    "BackupPlan": {
     "BackupPlanName": "BackupPlan",
     "BackupPlanRule": [
      {
       "Lifecycle": {
        "DeleteAfterDays": 7
       },
       "RuleName": "BackupPlanRule0",
       "ScheduleExpression": "cron(0 3 * * ? *)",
       "TargetBackupVault": {
        "Fn::GetAtt": [
         "BackupVault3A9C5852",
         "BackupVaultName"
        ]
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/BackupPlan/Resource"
   }
  },
  "BackupPlanSelectionRoleFF9E5076": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "backup.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/BackupPlan/Selection/Role/Resource"
   }
  },
  "BackupPlanSelectionF2B21E7E": {
   "Type": "AWS::Backup::BackupSelection",
   "Properties": {
    "BackupPlanId": {
     "Fn::GetAtt": [
      "BackupPlanA8F64793",
      "BackupPlanId"
     ]
    },
    "BackupSelection": {
     "IamRoleArn": {
      "Fn::GetAtt": [
       "BackupPlanSelectionRoleFF9E5076",
       "Arn"
      ]
     },
     "ListOfTags": [
      {
       "ConditionKey": "Name",
       "ConditionType": "STRINGEQUALS",
       "ConditionValue": "HighAvailabilityApp"
      }
     ],
     "SelectionName": "Selection"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/BackupPlan/Selection/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31QPU/DMBD9Ld0dQ1MJsbYMCKlDlFSs6OIcialjR/aZqor837ETSAMD072Pk+/55Xz7+MDvN3BxmWjOmZI1HysCcWZRehtR5JGj8FbS9dkaP7Cnd/2/8KJbi86xI3gtuhP2gwLCtPZbCQw8GSdASd3ycR9JNZPl3b9aYKjAkRTKQFODAi2i9Rkz7odBSQEkjT5G7zB5aKera77ek45Qf+/84JV/AtsiLVlWNLAYwDcXINHF0wpsP6VNILA6tucHPh6m+QpeUXLXdMZFzHRzJjbDChWKFOHmLlJgEno+lkZNlaYZQkIFWOiR4h9KdMZbEQsurtQZfbfj2x3PNx9Oysx6TbJHXs7zC/gC0WUBAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "HighAvailabilityApp/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}